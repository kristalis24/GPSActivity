---------------------------------------------------------
Android GPX Library
https://codebutchery.wordpress.com/android-gpx-library/
=========================================================
Basic Usage:

This is the basic code required to parse a GPX file, assuming that we have a “file.gpx” in the assets folder:

try {

  InputStream input = getAssets().open("file.gpx");

  // The GpxParser automatically closes the InputStream so we do not have to bother about it
  new GpxParser(input, this, this).parse();

} catch (IOException e) {
  // Error opening/reading file
}


The GpxParser constructor takes three parameters:

    The InputStream for input data
    A GpxParserListener implementation (see below)
    A GpxParserProgressListener implementation, can be null (see below)

Once the GpxParser has been constructed just call the parse() method to start it.
===================================================================================================
Parser listeners:

Two different event listeners can be provided to the GpxParser constructor:

public GpxParser(InputStream gpxIs,
                 GpxParserListener listener,
                 GpxParserProgressListener progressListener)

The GpxParserListener is mandatory, an IllegalArgumentException will be thrown if this argument is null.
GpxParserListener provides basic feedback on the parser activity, the methods are pretty self explanatory:

public static interface GpxParserListener {

    public void onGpxParseStarted();
    public void onGpxParseCompleted(GPXDocument document);
    public void onGpxParseError(String type,
                                    String message,
                                    int lineNumber,
                                    int columnNumber);

}

The GpxParserProgressListener on the other hand is only required if you need a fine degree of feedback
on what the parser is currently doing in the background.
This listener should be used only if necessary as it requires implementing a lot of methods.

public static interface GpxParserProgressListener {

    public void onGpxNewTrackParsed(int count, GPXTrack track);
    public void onGpxNewRouteParsed(int count, GPXRoute track);
    public void onGpxNewSegmentParsed(int count, GPXSegment segment);
    public void onGpxNewTrackPointParsed(int count, GPXTrackPoint trackPoint);
    public void onGpxNewRoutePointParsed(int count, GPXRoutePoint routePoint);
    public void onGpxNewWayPointParsed(int count, GPXWayPoint wayPoint);

}

As you can see the *GpxParserProgressListener* can be used to get a callback on every GPX entity that is being parsed.

Internal GPX representation
As you may have noticed this library provides a set of objects to represent different GPX entities

    GPXDocument Top level container, represents the GPX file
    GPXTrack GPX trk entity
    GPXRoute GPX rte entity
    GPXSegment GPX trkseg entity
    GPXTrackPoint GPX trkpt entity
    GPXRoutePoint GPX rtept entity
    GPXWayPoint GPX wpt entity
